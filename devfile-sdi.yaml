schemaVersion: 2.2.0
metadata:
  name: SDI
#attributes:
#  controller.devfile.io/storage-type: ephemeral

projects:
  - name: sdi-monorepo
    #clonePath: resources/sdi-monorepo
    git:
      remotes:
        origin: 'https://dev.azure.com/SIFEntrate2Collection/TP_ENT_SA_0454/_git/sdi-monorepo'
      checkoutFrom:
        revision: feature/devfile-in-repo
      
  - name: sdi-gitops
    #clonePath: resources/sdi-gitops
    git:
      remotes:
        origin: 'https://dev.azure.com/SIFEntrate2Collection/TP_ENT_SA_0454/_git/sdi-gitops'
      checkoutFrom:
        revision: main

components:
  - name: tools
    container:
      image: alm-repos.sogei.it/devfile/universal-developer-image:ubi8-4407fa4_v2.4
      #      env:
      #        - name: spring_profiles_active
      #          value: devspaces
      #        - name: MAVEN_OPTS
      #          value: "-Dmaven.wagon.http.ssl.insecure=true"
      endpoints:
        - exposure: none
          name: debug
          protocol: tcp
          targetPort: 5005
        - exposure: public
          name: app
          protocol: http
          targetPort: 8080
          path: /
        - exposure: public
          name: react
          protocol: http
          targetPort: 3000
          path: /
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      memoryLimit: 6G
      memoryRequest: 2G
      cpuLimit: 1500m
      cpuRequest: 400m
      mountSources: true

  - name: m2
    volume:
      size: 2G

  - name: kafka
    container:
      image: docker.io/lsnidero/kafka:0.0.1
      endpoints:
        - name: kafka-broker
          targetPort: 9092
        - name: zookeeper
          targetPort: 2181
          exposure: internal
      volumeMounts:
        - name: zookeeper-vol
          path: /var/lib/zookeeper
      memoryLimit: 768Mi
      mountSources: true

  - name: zookeeper-vol
    volume:
      size: 1G
      ephemeral: true

  - name: kafka-ui
    container:
      image: provectuslabs/kafka-ui:v0.6.1
      endpoints:
        - name: kafka-ui
          targetPort: 8888
      memoryLimit: 1024Mi
      cpuLimit: 500m
      cpuRequest: 10m
      env:
        - name: KAFKA_CLUSTERS_0_NAMEl
          value: local
        - name: KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS
          value: localhost:9092
        - name: KAFKA_CLUSTERS_0_ZOOKEEPER
          value: localhost:2181
        - name: KAFKA_CLUSTERS_0_READONLY
          value: "false"
        - name: SERVER_PORT
          value: "8888"


  - name: mongo
    container:
      #image: alm-repos.sogei.it/devfile/mongo-rs:5_v1.0.6
      image: mongo:5
      env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "MyPassword"
        - name: MONGO_INITDB_USERNAME
          value: "sdiuser"
        - name: MONGO_INITDB_PASSWORD
          value: "sdiuser"
        - name: MONGO_INITDB_DATABASE
          value: "sdi"
      endpoints:
        - name: mongo-svc
          targetPort: 27017
          exposure: internal
          protocol: tcp
      volumeMounts:
        - name: mongo-vol
          path: /data/db
      memoryRequest: 64M
      memoryLimit: 512M
      cpuRequest: 10m
      cpuLimit: 500m


  - name: mongo-vol
    volume:
      size: 1G

commands:
  - id: setup-environment
    exec:
      label: Task automatico
      component: tools
      workingDir: ${PROJECTS_ROOT}
      commandLine: |
        # set java version
        . /home/user/.sdkman/bin/sdkman-init.sh
        JAVA_V=17.0.3-tem
        CERTS_DIR=${PROJECTS_ROOT}/sdi-monorepo/devspaces/certs
        TRUST_STORE_FILE=/home/user/.sdkman/candidates/java/current/lib/security/cacerts
        
        sdk install java $JAVA_V
        sdk default java $JAVA_V
        
        sdk install quarkus 2.16.6.Final



        # configure settings.xml and .npmrc
        setup_configurations_files(){
          MVN_SETTINGS_REMOTE="https://alm-repos.sogei.it/repository/codeready-plugins/assets/settings-https-v3.xml"
          mkdir -p /home/user/.m2
          wget  -q --no-check-certificate $MVN_SETTINGS_REMOTE -O /home/user/.m2/settings.xml
        
          echo registry=https://alm-repos.sogei.it/repository/npm-group/ > /home/user/.npmrc
          echo cafile=/etc/pki/ca-trust/source/anchors/alm-repos.sogei.it-ca.crt >> /home/user/.npmrc
          
          echo "Importing self signed certificates"
          keytool -import -alias 'ingress' -file ${CERTS_DIR}/ingress-operator.crt -storetype JKS -keystore ${TRUST_STORE_FILE} -keypass changeit -storepass changeit -noprompt
          keytool -import -alias 'apps' -file ${CERTS_DIR}/apps.devspace.crt -storetype JKS -keystore ${TRUST_STORE_FILE} -keypass changeit -storepass changeit -noprompt
        }
        setup_configurations_files

  - id: run-debug
    exec:
      label: 1 - Run Debug
      component: tools
      workingDir: ${PROJECT_SOURCE}
      commandLine: |
        echo TODO
      #        mvn spring-boot:run -DskipTests \
      #        -Dspring-boot.run.jvmArguments='-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005,quiet=y'
      group:
        kind: run
        isDefault: true

  - id: composite-initial-setup
    composite:
      commands:
        - install-plugins
        - setup-environment
        - setup-databases

events:
  postStart:
    - setup-environment

